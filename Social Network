class Person:
    '''
    A class representing a person in a social network.
    
    Attributes:
        name (str): The name of the person.
        friends (list): A list of friends (Person objects).
        
    Methods:
        add_friend(friend): Adds a friend to the person's friend list.
    '''
    
    def __init__(self, name):
        self.name = name
        self.friends = []
    
    def add_friend(self, friend):
        """Adds another Person as a friend if not already in the list."""
        if friend not in self.friends:
            self.friends.append(friend)


class SocialNetwork:
    '''
    A class representing a social network.
    
    Attributes:
        people (dict): A dictionary mapping names to Person objects.
        
    Methods:
        add_person(name): Adds a new person to the network.
        add_friendship(person1_name, person2_name): Creates a friendship between two people.
        print_network(): Prints the names of all people and their friends.
    '''
    
    def __init__(self):
        self.people = {}
    
    def add_person(self, name):
        """Adds a new person to the network if not already present."""
        if name in self.people:
            print(f"Error: '{name}' already exists in the network.")
        else:
            self.people[name] = Person(name)
    
    def add_friendship(self, person1_name, person2_name):
        """Creates a bidirectional friendship between two people."""
        if person1_name not in self.people or person2_name not in self.people:
            print(f"Error: One or both users ('{person1_name}', '{person2_name}') do not exist.")
            return
        
        person1 = self.people[person1_name]
        person2 = self.people[person2_name]
        
        person1.add_friend(person2)
        person2.add_friend(person1)
    
    def print_network(self):
        """Prints all users and their friends."""
        for name, person in self.people.items():
            friends_names = [f.name for f in person.friends]
            print(f"{name}: {', '.join(friends_names) if friends_names else 'No friends'}")


# ---------- Test Code ----------
if __name__ == "__main__":
    network = SocialNetwork()
    
    # Add people
    network.add_person("Alex")
    network.add_person("Jordan")
    network.add_person("Morgan")
    
    # Create friendships
    network.add_friendship("Alex", "Jordan")
    network.add_friendship("Alex", "Morgan")
    network.add_friendship("Jordan", "Taylor")  # Error: Taylor doesn't exist
    
    print("\n--- Social Network ---")
    network.print_network()
